name: Build and upload gdb

on:
  # Triggers the workflow om pushes to main.
  # all PRs, and release tags 
  push:
    branches:
      - main
jobs:
  Windows_MinGW-w64_Binary:
    name: Create Windows binary with MinGW-w64
    runs-on: windows-latest
#    defaults:
#      run:
#        shell: msys2 {0}
    steps:
      - name: Setup action env and echoing
        shell: bash
        run: |
          echo '::echo::on'
          echo 'action_echo=enabled' >> $GITHUB_OUTPUT
          echo workpath=$(echo '${{ github.workspace }}' | sed 's|\\|/|g') >> $GITHUB_ENV
      - name: Get latest Github release
        uses: performous/github-action-get-latest-release@v0.7.0
        id: get-latest-release
        with:
          repository: ssbssa/gdb
          excludes: prerelease, draft
          token: ${{ github.token }}
      - name: Determine checkout tag
        shell: bash
        id: determine-checkout-revision
        run: |
          echo "gdb-revision=${{ steps.get-latest-release.outputs.release }}" >> $GITHUB_OUTPUT
      - name: Checkout Repo
        id: checkout_repo
        uses: actions/checkout@v3
        with:
          path: ${{ env.workpath }}
      - name: checkout-gdb
        uses: actions/checkout@v3
        with:
          path: ${{ env.workpath }}/gdb
          repository: ssbssa/gdb
          ref: '${{ steps.determine-checkout-revision.outputs.gdb-revision }}'
          fetch-depth: 1 
      - name: Install MSYS2.
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: false
          location: ${{ github.workspace }}
          install: >-
            bash
            bison
            db
            git
            dos2unix
            info
            flex
            findutils
            gawk
            gdbm
            gettext
            help2man
            less
            libcrypt
            libdb
            libgdbm
            libintl
            libltdl
            libtool
            make
            m4
            patch
            perl
            texinfo
            mingw-w64-x86_64-autotools
            mingw-w64-x86_64-binutils
            mingw-w64-x86_64-bzip2
            mingw-w64-x86_64-crt-git
            mingw-w64-x86_64-expat
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-gcc-libs
            mingw-w64-x86_64-gettext
            mingw-w64-x86_64-gmp
            mingw-w64-x86_64-headers-git
            mingw-w64-x86_64-isl
            mingw-w64-x86_64-libffi
            mingw-w64-x86_64-libiconv
            mingw-w64-x86_64-libsystre
            mingw-w64-x86_64-libtre
            mingw-w64-x86_64-libwinpthread
            mingw-w64-x86_64-make
            mingw-w64-x86_64-mpdecimal
            mingw-w64-x86_64-mpfr
            mingw-w64-x86_64-ncurses
            mingw-w64-x86_64-openssl
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-python
            mingw-w64-x86_64-readline
            mingw-w64-x86_64-sqlite3
            mingw-w64-x86_64-tcl
            mingw-w64-x86_64-termcap
            mingw-w64-x86_64-tk
            mingw-w64-x86_64-tzdata
            mingw-w64-x86_64-windows-default-manifest
            mingw-w64-x86_64-xxhash
            mingw-w64-x86_64-xz
            mingw-w64-x86_64-zlib
      - name: Patch gdb
        shell: msys2 {0}
        run: |
          cd ${{ env.workpath }}
          patch --verbose -u -p0 --input=${{ env.workpath }}/enable-gmp-static.diff >> ${{ env.workpath }}/log.log 2>&1
          patch --verbose -u -p0 --input=${{ env.workpath }}/gdb-static-patch.diff >> ${{ env.workpath }}/log.log 2>&1
      - name: Configure and build gdb
        shell: msys2 {0}
        run: |
          cd ${{ env.workpath }}/gdb
          find -iname "*.texi" -exec dos2unix '{}' \;
          mkdir build
          mkdir '${{ steps.determine-checkout-revision.outputs.gdb-revision }}'
          cd build
          #rm ${{ env.workpath }}/msys64/mingw64/lib/libgmp*.dll.a
          #rm ${{ env.workpath }}/msys64/mingw64/bin/libgmp*.dll
          #rm ${{ env.workpath }}/msys64/mingw64/lib/libzstd.dll.a
          #rm ${{ env.workpath }}/msys64/mingw64/bin/libzstd.dll
          mkdir -p ${{ env.workpath }}/msys64/mingw64/lib/static
          cp -v ${{ env.workpath }}/msys64/mingw64/lib/libzstd.a ${{ env.workpath }}/msys64/mingw64/lib/static/
          cp -v ${{ env.workpath }}/msys64/mingw64/lib/libgmp.a ${{ env.workpath }}/msys64/mingw64/lib/static/
          cp -v ${{ env.workpath }}/msys64/mingw64/lib/libgmpxx.a ${{ env.workpath }}/msys64/mingw64/lib/static/
          ../configure --verbose --enable-static --disable-shared --disable-host-shared --with-static-standard-libraries --prefix='${{ env.workpath }}/gdb/${{ steps.determine-checkout-revision.outputs.gdb-revision }}' --with-gmp-include=${{ env.workpath }}/msys64/mingw64/include --with-gmp-lib=${{ env.workpath }}/msys64/mingw64/lib --with-sysroot=${{ env.workpath }}/msys64/mingw64/ --disable-interprocess-agent --with-libmpfr-type=static --with-libgmp-type=static --with-libexpat-type=static --with-libiconv-type=static --with-libipt-type=static --disable-gdbtk --disable-tui CFLAGS='-DGMP_STATIC -DNEED_EXTERN_PC' CXXFLAGS='-DNCURSES_STATIC' LDFLAGS='-static -static-libgcc -static-libstdc++ -L${{ env.workpath }}/msys64/mingw64/lib/static -lgmp' 
          sed -i'' -r s/e\.g\.@$/e.g.@:/ ../gdb/doc/gdb.texinfo
          make V=1 AM_DEFAULT_VERBOSITY=1
          # -l${{ env.workpath }}/msys64/mingw64/lib/libgmp.a -l${{ env.workpath }}/msys64/mingw64/lib/llibgmpxx.a
          make install
          cd '${{ env.workpath }}/gdb'
          tar -cvJf '${{ steps.determine-checkout-revision.outputs.gdb-revision }}.tar.xz' -C '${{ env.workpath }}/gdb' './${{ steps.determine-checkout-revision.outputs.gdb-revision }}'
      - name: Upload artifact
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/upload-artifact@v3
        with:
          name: '${{ steps.determine-checkout-revision.outputs.gdb-revision }}.xz'
          path: '${{ env.workpath }}/gdb/${{ steps.determine-checkout-revision.outputs.gdb-revision }}.tar.xz'
      - name: Upload log
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: 'Logs'
          path: |
            ${{ env.workpath }}/**/*.log

